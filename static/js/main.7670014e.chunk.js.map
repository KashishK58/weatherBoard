{"version":3,"sources":["components/Tempapp.js","App.js","reportWebVitals.js","index.js"],"names":["Tempapp","city","setCity","useState","search","setSearch","icon","seticon","useEffect","async","url","response","fetch","resJson","json","main","weather","fetchAPI","React","createElement","Fragment","className","style","marginRight","type","placeholder","name","value","onChange","event","target","onClick","id","src","alt","temp","temp_min","temp_max","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"qPAiFeA,MA7ECA,KACd,MAAOC,EAAMC,GAAWC,mBAAS,OAC1BC,EAAQC,GAAaF,mBAAS,cAC9BG,EAAMC,GAAWJ,mBAAS,MAcjC,OAbAK,oBAAU,KACSC,WACf,MAAMC,uDAA2DN,wDAC3DO,QAAiBC,MAAMF,GAEvBG,QAAgBF,EAASG,OAC/BZ,EAAQW,EAAQE,MAChBR,EAAQM,EAAQG,UAGlBC,IACC,CAACb,IAGFc,IAAAC,cAAAD,IAAAE,SAAA,KACEF,IAAAC,cAAA,OAAKE,UAAU,WACbH,IAAAC,cAAA,QAAME,UAAU,SAAQ,eACxBH,IAAAC,cAAA,WACAD,IAAAC,cAAA,YACED,IAAAC,cAAA,OAAKE,UAAU,QACfH,IAAAC,cAAA,MAAIG,MAAO,CAACC,YAAY,SAAS,gBAC/BL,IAAAC,cAAA,OAAKE,UAAU,iBACbH,IAAAC,cAAA,SACEK,KAAK,OACLC,YAAY,OACZC,KAAK,OACLC,MAAOvB,EACPwB,SAAWC,GAAUxB,EAAUwB,EAAMC,OAAOH,SAE7CvB,GACCc,IAAAC,cAAA,UAAQE,UAAU,eAAeU,QAASA,IAAM1B,EAAU,KACxDa,IAAAC,cAAA,KAAGE,UAAU,oBAKiB,sBAMxCH,IAAAC,cAAA,WACGb,EACCY,IAAAC,cAAA,OACEa,GAAG,QACHC,wCAAyC3B,EAAK,GAAGA,cACjD4B,IAAI,iBAGNhB,IAAAC,cAAA,WAIFlB,EAGAiB,IAAAC,cAAA,OAAKE,UAAU,QACbH,IAAAC,cAAA,MAAIE,UAAU,YAAYjB,GAE1Bc,IAAAC,cAAA,MAAIE,UAAU,QAAQpB,EAAKkC,KAAK,SAEhCjB,IAAAC,cAAA,MAAIE,UAAU,eACX,IAAI,SACEpB,EAAKmC,SAAS,iBAAYnC,EAAKoC,SAAS,UATnDnB,IAAAC,cAAA,SAAG,oBCtDEmB,MAJf,WACE,OAAOpB,IAAAC,cAACnB,EAAO,OCMFuC,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAKE,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHtC,IAAAC,cAACD,IAAMuC,WAAU,KACfvC,IAAAC,cAACmB,EAAG,QAKRC","file":"static/js/main.7670014e.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport \"../css/style.css\";\n\nconst Tempapp = () => {\n  const [city, setCity] = useState(null);\n  const [search, setSearch] = useState(\"Gorakhpur\");\n  const [icon, seticon] = useState(null);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      const url = `https://api.openweathermap.org/data/2.5/weather?q=${search}&appid=51f1c6706b2695cb844b6ba7449e6817&units=metric`;\n      const response = await fetch(url);\n\n      const resJson = await response.json();\n      setCity(resJson.main);\n      seticon(resJson.weather);\n    };\n\n    fetchAPI();\n  }, [search]);\n\n  return (\n    <>\n      <div className=\"weather\">\n        <span className=\"title\">Weather App</span>\n        <br />\n        <form>\n          <div className=\"line\">\n          <h2 style={{marginRight:\"10px\"}}>Search City:</h2>\n            <div className=\"input-wrapper\">\n              <input\n                type=\"text\"\n                placeholder=\"City\"\n                name=\"city\"\n                value={search}\n                onChange={(event) => setSearch(event.target.value)}\n              />\n              {search && (\n                <button className=\"clear-button\" onClick={() => setSearch(\"\")}>\n                  <i className=\"fas fa-times\"></i>\n                </button>\n              )}\n            </div>\n          </div>\n          {/* <span className=\"or\">OR</span> */}\n          &nbsp; &nbsp; &nbsp;&nbsp;\n          {/* <input type=\"text\" placeholder=\"Country\" name=\"country\" /> */}\n          {/* <button className=\"getweather\">Submit</button> */}\n        </form>\n\n        <div>\n          {icon ? (\n            <img\n              id=\"wicon\"\n              src={`http://openweathermap.org/img/wn/${icon[0].icon}@2x.png`}\n              alt=\"weather icon\"\n            ></img>\n          ) : (\n            <p></p>\n          )}\n        </div>\n\n        {!city ? (\n          <p>NO Data found</p>\n        ) : (\n          <div className=\"info\">\n            <h1 className=\"location\">{search}</h1>\n\n            <h1 className=\"temp\">{city.temp}°C</h1>\n\n            <h3 className=\"tempmin_max\">\n              {\" \"}\n              Min : {city.temp_min}°C | Max : {city.temp_max}°C\n            </h3>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Tempapp;\n","import React from \"react\";\nimport \"./App.css\";\nimport Tempapp from \"./components/Tempapp\";\n\n\nfunction App() {\n  return <Tempapp />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}